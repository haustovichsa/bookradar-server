# import UserOrderByInput from './generated/prisma.graphql'

type Query {
    users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
    me: User!
    ownBooks: [OwnBook!]!
    wishBooks: [WishBook!]!
    searchBooksByNameOrAuthor(query: String!): [OwnBook!]!
}

type Mutation {
    createUser(data: CreateUserInput!): AuthPayload!
    login(data: LoginUserInput!): AuthPayload!
    deleteUser: User!
    updateUser(data: UpdateUserInput!): User!
    createOwnBook(data: OwnBookCreateInput!): OwnBook!
    deleteOwnBook(id: ID!): OwnBook!
    updateOwnBook(id: ID!, data: UpdateOwnBookInput!): OwnBook!
    createWishBook(data: WishBookCreateInput!): WishBook!
    deleteWishBook(id: ID!): WishBook!
    updateWishBook(id: ID!, data: WishBookUpdateInput!): WishBook!
}

#type Subscription {
    
#}

input LoginUserInput {
    email: String!
    password: String!
}

type AuthPayload {
    token: String!
    user: User!
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
    phoneNumber: String
}

input UpdateUserInput {
    name: String
    email: String
    password: String
    phoneNumber: String
}

type User {
    id: ID!
    name: String!
    email: String
    phoneNumber: String
    ownBooks: [OwnBook!]
    wishBooks: [WishBook!]
}

type OwnBook  {
    id: ID!
    name: String!
    author: String
    published_year: Int
    genre: Int
    imageId: String
    sharingType: Int
    user: User!
}

input OwnBookCreateInput {
    name: String!
    author: String!
    published_year: Int
    genre: Int
    imageId: String
    sharingType: Int
}

input UpdateOwnBookInput {
    name: String
    author: String
    published_year: Int
    genre: Int
    imageId: String
    sharingType: Int
}

type WishBook  {
    id: ID!
    name: String!
    author: String
    genre: Int
    user: User!
}

input WishBookCreateInput {
    name: String!
    author: String!
    genre: Int
}

input WishBookUpdateInput {
    name: String
    author: String
    genre: Int
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}