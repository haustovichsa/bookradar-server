# import UserOrderByInput from './generated/prisma.graphql'

type Query {
    users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
    me: User!
}

type Mutation {
    createUser(data: CreateUserInput!): AuthPayload!
    login(data: LoginUserInput!): AuthPayload!
    deleteUser: User!
    updateUser(data: UpdateUserInput!): User!
    createBook(data: CreateBookInput!): Book!
}

#type Subscription {
    
#}

input LoginUserInput {
    email: String!
    password: String!
}

type AuthPayload {
    token: String!
    user: User!
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
}

input UpdateUserInput {
    name: String
    email: String
    password: String
}

type User {
    id: ID!
    name: String!
    email: String
    password: String!
    books: [Book!]!
}

type Book  {
  id: ID!
  name: String!
  author: String
  description: String
  published_year: String
  ownerUser: User!
}

input CreateBookInput {
    name: String!
    author: String!
    description: String
    published_year: String
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}